{"version":3,"sources":["file/file.jsx","folder-button/folder-button.jsx","folder/folder.jsx","total/size.jsx","total/util.js","total/file-count.jsx","App.js","serviceWorker.js","index.js"],"names":["File","react_default","a","createElement","href","this","props","name","className","Description_default","Filesize","size","Component","FolderButton","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleFolder","bind","assertThisInitialized","state","closed","e","preventDefault","setState","onClick","Fragment","index_es","folder_folder","folderStructure","children","defaultPropTypes","Folder","concat","reduce","acc","curr","type","push","key","file_file","assign","folder_button_folder_button","Size","totalSizeCalculator","fileList","totalSize","length","FileCount","totalFileCount","fileCount","App","_this2","axios","get","then","response","data","catch","error","file_count","message","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59ba3ee7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Description from '@material-ui/icons/Description';\nimport PropTypes from 'prop-types';\nimport Filesize from 'filesize';\n\nimport './file.css';\n\nclass File extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<a href={this.props.name} className=\"file\">\n\t\t\t\t<span className=\"file__icon\"><Description /></span>\n\t\t\t\t<span className=\"file__name\">{this.props.name}</span>\n\t\t\t\t<span className=\"file__size\">{Filesize(this.props.size)}</span>\n\t\t\t</a>\n\t\t);\n\t}\n}\n\nFile.propTypes = {\n\tname: PropTypes.string.isRequired,\n\tsize: PropTypes.number.isRequired\n};\n\nexport default File;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tFolderOpen,\n\tFolder as FolderClosed,\n\tExpandMore,\n\tChevronRight\n} from '@material-ui/icons';\n\nimport './folder-button.css';\nimport Folder from '../folder/folder';\n\nclass FolderButton extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.toggleFolder = this.toggleFolder.bind(this);\n\t\tthis.state = {\n\t\t\tclosed: this.props.closed\n\t\t};\n\t}\n\n\ttoggleFolder(e) {\n\t\te.preventDefault();\n\n\t\tthis.setState({\n\t\t\tclosed: !this.state.closed\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"folder-button\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={this.toggleFolder}\n\t\t\t\t\tclassName=\"folder-button__button\"\n\t\t\t\t>\n\t\t\t\t\t<span className=\"folder-button__icon\">\n\t\t\t\t\t\t{this.state.closed ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<ChevronRight />\n\t\t\t\t\t\t\t\t<FolderClosed />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<ExpandMore />\n\t\t\t\t\t\t\t\t<FolderOpen />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"folder-button__name\">\n\t\t\t\t\t\t{this.props.name}\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t<Folder\n\t\t\t\t\tfolderStructure={this.props.children}\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t`folder__container ` +\n\t\t\t\t\t\t(this.state.closed\n\t\t\t\t\t\t\t? 'folder__container--closed'\n\t\t\t\t\t\t\t: 'folder__container--open')\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nFolderButton.propTypes = {\n\tname: PropTypes.string,\n\tclosed: PropTypes.bool,\n\tchildren: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n            type: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tsize: PropTypes.number,\n\t\t\tchildren: PropTypes.array\n\t\t}).isRequired\n\t)\n};\n\nFolderButton.defaultPropTypes = {\n\tname: '',\n\tclosed: true\n};\n\nexport default FolderButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport File from '../file/file';\nimport FolderButton from '../folder-button/folder-button';\nimport './folder.css';\n\nclass Folder extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ul className={`folder ${this.props.className}`}>\n\t\t\t\t{this.props.folderStructure &&\n\t\t\t\t\tthis.props.folderStructure.reduce((acc, curr) => {\n\t\t\t\t\t\tif (curr.type === 'file') {\n\t\t\t\t\t\t\tacc.push(\n\t\t\t\t\t\t\t\t<li className=\"folder__item\" key={curr.name}>\n\t\t\t\t\t\t\t\t\t<File {...curr} key={curr.name} />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tacc.push(\n\t\t\t\t\t\t\t\t<li className=\"folder__item\" key={curr.name}>\n\t\t\t\t\t\t\t\t\t<FolderButton\n\t\t\t\t\t\t\t\t\t\tname={curr.name}\n\t\t\t\t\t\t\t\t\t\tchildren={curr.children}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, [])}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nFolder.propTypes = {\n\tfolderStructure: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n            type: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tsize: PropTypes.number,\n\t\t\tchildren: PropTypes.array\n\t\t}).isRequired\n\t),\n\tclosed: PropTypes.bool,\n\tclassName: PropTypes.string\n};\n\nFolder.defaultPropTypes = {\n\tclosed: true,\n\tclassName: 'folder__container'\n};\n\nexport default Folder;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Filesize from 'filesize';\n\nimport { totalSizeCalculator } from './util';\n\nclass Size extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<p>\n\t\t\t\tTotal size:{' '}\n\t\t\t\t{Filesize(totalSizeCalculator(this.props.folderStructure))}\n\t\t\t</p>\n\t\t);\n\t}\n}\n\nSize.propTypes = {\n\tfolderStructure: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tsize: PropTypes.number,\n\t\t\tchildren: PropTypes.array\n\t\t}).isRequired\n\t)\n};\n\nexport default Size;\n","export function totalSizeCalculator(fileList) {\n    let totalSize = 0;\n\n    if(fileList.length > 0) {\n        totalSize = fileList.reduce((acc, curr) => {\n            if(curr.type === 'folder') {\n                acc += totalSizeCalculator(curr.children);\n            } else {\n                acc += curr.size;\n            }\n            return acc;\n        }, 0)\n    }\n\n    return totalSize;\n\n}\n\n\nexport function totalFileCount(fileList) {\n    let fileCount = 0;\n\n    if(fileList.length > 0) {\n        fileCount = fileList.reduce((acc, curr) => {\n            if(curr.type === 'folder') {\n                acc += totalFileCount(curr.children);\n            } else {\n                acc++;\n            }\n            return acc;\n        }, 0)\n    }\n\n    return fileCount;\n\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { totalFileCount } from './util';\n\nclass FileCount extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<p>\n                File Count: {totalFileCount(this.props.folderStructure)}\n\t\t\t</p>\n\t\t);\n\t}\n}\n\nFileCount.propTypes = {\n\tfolderStructure: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tsize: PropTypes.number,\n\t\t\tchildren: PropTypes.array\n\t\t}).isRequired\n\t)\n};\n\nexport default FileCount;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Folder from './folder/folder';\nimport Size from './total/size';\nimport FileCount from './total/file-count';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfolderStructure: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\taxios\n\t\t\t.get('https://chal-locdrmwqia.now.sh/')\n\t\t\t.then(response => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tfolderStructure: response.data.data\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: error\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{this.state.folderStructure.length > 0 && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Folder\n\t\t\t\t\t\t\tfolderStructure={this.state.folderStructure}\n\t\t\t\t\t\t\tclosed={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Size folderStructure={this.state.folderStructure} />\n\t\t\t\t\t\t<FileCount\n\t\t\t\t\t\t\tfolderStructure={this.state.folderStructure}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{this.state.error && <pre>{this.state.error.message}</pre>}\n\t\t\t\t<p>\n\t\t\t\t\tPlease note that there are sometimes errors in the console\n\t\t\t\t\tabout duplicate keys. I'm ok with this error as the api\n\t\t\t\t\tspits out file names that are the same on the same level\n\t\t\t\t\twhich isn't really possible in real life.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}